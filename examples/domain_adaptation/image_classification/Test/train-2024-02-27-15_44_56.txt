Namespace(arch='resnet50', batch_size=8, bottleneck_dim=256, byte_size=512, data='Both', epochs=1, iters_per_epoch=500, label=3, log='Test/', loss_function='MKMMD', lr=0.003, lr_decay=0.75, lr_gamma=0.0003, momentum=0.9, no_pool=False, non_linear=False, per_class_eval=True, percent=0.5, phase='train', print_freq=100, random_frequencies=5, scale_parameter=1, scenario='S2T', scratch=False, seed=None, subset='none', test_statistic='none', trade_off=0.05, wd=0.0005, workers=2)
Concate data
(183560, 514) (122820, 514)
Shape of datas before resize is (9178, 20, 512)
Shape of datas befor get error is: (9178, 512, 512)
Shape of datas before resize is (6141, 20, 512)
Shape of datas befor get error is: (6141, 512, 512)
Shape of datas before resize is (1478, 20, 512)
Shape of datas befor get error is: (1478, 512, 512)
Shape of datas before resize is (1478, 20, 512)
Shape of datas befor get error is: (1478, 512, 512)
num_classes: 3
=> using model 'resnet50'
Downloading: "https://download.pytorch.org/models/resnet50-0676ba61.pth" to /home/bkcs/.cache/torch/hub/checkpoints/resnet50-0676ba61.pth
  0%|          | 0.00/97.8M [00:00<?, ?B/s]  1%|1         | 1.02M/97.8M [00:00<00:09, 10.6MB/s]  2%|2         | 2.12M/97.8M [00:00<00:09, 10.6MB/s]  3%|3         | 3.27M/97.8M [00:00<00:08, 11.2MB/s]  4%|4         | 4.35M/97.8M [00:00<00:08, 11.2MB/s]  6%|5         | 5.46M/97.8M [00:00<00:08, 11.3MB/s]  7%|6         | 6.55M/97.8M [00:00<00:08, 11.3MB/s]  8%|7         | 7.66M/97.8M [00:00<00:08, 11.4MB/s]  9%|8         | 8.75M/97.8M [00:00<00:09, 9.77MB/s] 10%|9         | 9.72M/97.8M [00:01<00:10, 8.74MB/s] 11%|#         | 10.6M/97.8M [00:01<00:11, 8.11MB/s] 12%|#1        | 11.4M/97.8M [00:01<00:11, 7.92MB/s] 12%|#2        | 12.2M/97.8M [00:01<00:11, 7.73MB/s] 13%|#3        | 13.1M/97.8M [00:01<00:10, 8.37MB/s] 15%|#4        | 14.2M/97.8M [00:01<00:09, 9.16MB/s] 16%|#5        | 15.3M/97.8M [00:01<00:08, 9.78MB/s] 17%|#6        | 16.3M/97.8M [00:01<00:10, 8.35MB/s] 18%|#7        | 17.2M/97.8M [00:01<00:09, 8.55MB/s] 19%|#8        | 18.4M/97.8M [00:02<00:08, 9.55MB/s] 20%|#9        | 19.5M/97.8M [00:02<00:08, 10.0MB/s] 21%|##1       | 20.6M/97.8M [00:02<00:07, 10.4MB/s] 22%|##2       | 21.6M/97.8M [00:02<00:07, 10.6MB/s] 23%|##3       | 22.7M/97.8M [00:02<00:07, 10.2MB/s] 24%|##4       | 23.7M/97.8M [00:02<00:07, 10.0MB/s] 25%|##5       | 24.7M/97.8M [00:02<00:07, 10.2MB/s] 26%|##6       | 25.8M/97.8M [00:02<00:07, 10.6MB/s] 28%|##7       | 26.9M/97.8M [00:02<00:06, 10.8MB/s] 29%|##8       | 28.0M/97.8M [00:03<00:07, 9.87MB/s] 30%|##9       | 28.9M/97.8M [00:03<00:07, 9.92MB/s] 31%|###       | 29.9M/97.8M [00:03<00:07, 10.1MB/s] 32%|###1      | 31.0M/97.8M [00:03<00:06, 10.5MB/s] 33%|###2      | 32.1M/97.8M [00:03<00:06, 10.7MB/s] 34%|###3      | 33.1M/97.8M [00:03<00:07, 9.18MB/s] 35%|###5      | 34.3M/97.8M [00:03<00:06, 9.79MB/s] 36%|###6      | 35.4M/97.8M [00:03<00:06, 10.3MB/s] 37%|###7      | 36.4M/97.8M [00:03<00:06, 10.2MB/s] 38%|###8      | 37.4M/97.8M [00:04<00:10, 6.28MB/s] 39%|###9      | 38.2M/97.8M [00:04<00:14, 4.30MB/s] 40%|###9      | 38.8M/97.8M [00:04<00:17, 3.51MB/s] 40%|####      | 39.3M/97.8M [00:05<00:18, 3.31MB/s] 41%|####      | 39.7M/97.8M [00:05<00:18, 3.30MB/s] 41%|####      | 40.1M/97.8M [00:05<00:18, 3.24MB/s] 41%|####1     | 40.5M/97.8M [00:05<00:17, 3.39MB/s] 42%|####1     | 41.1M/97.8M [00:05<00:15, 3.96MB/s] 43%|####2     | 41.8M/97.8M [00:05<00:12, 4.82MB/s] 43%|####3     | 42.4M/97.8M [00:05<00:11, 5.02MB/s] 44%|####3     | 42.9M/97.8M [00:05<00:11, 5.06MB/s] 44%|####4     | 43.4M/97.8M [00:05<00:11, 5.06MB/s] 45%|####4     | 43.9M/97.8M [00:06<00:11, 5.08MB/s] 45%|####5     | 44.4M/97.8M [00:06<00:11, 5.04MB/s] 46%|####5     | 45.0M/97.8M [00:06<00:10, 5.22MB/s] 47%|####6     | 45.5M/97.8M [00:06<00:10, 5.31MB/s] 47%|####7     | 46.0M/97.8M [00:06<00:10, 5.30MB/s] 48%|####7     | 46.6M/97.8M [00:06<00:09, 5.54MB/s] 48%|####8     | 47.2M/97.8M [00:06<00:09, 5.72MB/s] 49%|####8     | 47.8M/97.8M [00:06<00:09, 5.82MB/s] 49%|####9     | 48.4M/97.8M [00:06<00:08, 5.92MB/s] 50%|#####     | 49.0M/97.8M [00:07<00:08, 6.09MB/s] 51%|#####     | 49.6M/97.8M [00:07<00:08, 6.13MB/s] 51%|#####1    | 50.3M/97.8M [00:07<00:07, 6.31MB/s] 52%|#####2    | 50.9M/97.8M [00:07<00:07, 6.41MB/s] 53%|#####2    | 51.6M/97.8M [00:07<00:07, 6.34MB/s] 53%|#####3    | 52.3M/97.8M [00:07<00:07, 6.69MB/s] 54%|#####4    | 52.9M/97.8M [00:07<00:07, 6.70MB/s] 55%|#####4    | 53.6M/97.8M [00:07<00:06, 6.70MB/s] 56%|#####5    | 54.3M/97.8M [00:07<00:06, 6.83MB/s] 56%|#####6    | 55.0M/97.8M [00:07<00:06, 7.05MB/s] 57%|#####6    | 55.7M/97.8M [00:08<00:06, 7.12MB/s] 58%|#####7    | 56.4M/97.8M [00:08<00:06, 7.07MB/s] 58%|#####8    | 57.1M/97.8M [00:08<00:06, 7.06MB/s] 59%|#####9    | 57.8M/97.8M [00:08<00:05, 7.07MB/s] 60%|#####9    | 58.5M/97.8M [00:08<00:05, 7.11MB/s] 60%|######    | 59.2M/97.8M [00:08<00:05, 6.90MB/s] 61%|######1   | 59.9M/97.8M [00:08<00:05, 6.98MB/s] 62%|######1   | 60.5M/97.8M [00:08<00:05, 6.97MB/s] 63%|######2   | 61.2M/97.8M [00:08<00:05, 6.80MB/s] 63%|######3   | 61.9M/97.8M [00:08<00:05, 6.82MB/s] 64%|######4   | 62.6M/97.8M [00:09<00:05, 7.08MB/s] 65%|######4   | 63.3M/97.8M [00:09<00:05, 6.72MB/s] 65%|######5   | 63.9M/97.8M [00:09<00:05, 6.60MB/s] 66%|######6   | 64.6M/97.8M [00:09<00:05, 6.56MB/s] 67%|######6   | 65.2M/97.8M [00:09<00:05, 6.54MB/s] 67%|######7   | 65.8M/97.8M [00:09<00:05, 6.51MB/s] 68%|######8   | 66.7M/97.8M [00:09<00:04, 7.36MB/s] 69%|######9   | 67.8M/97.8M [00:09<00:03, 8.49MB/s] 70%|#######   | 68.8M/97.8M [00:09<00:03, 9.20MB/s] 71%|#######1  | 69.7M/97.8M [00:09<00:03, 9.25MB/s] 72%|#######2  | 70.7M/97.8M [00:10<00:03, 9.31MB/s] 73%|#######3  | 71.6M/97.8M [00:10<00:02, 9.54MB/s] 74%|#######4  | 72.5M/97.8M [00:10<00:02, 9.52MB/s] 75%|#######5  | 73.5M/97.8M [00:10<00:02, 9.69MB/s] 76%|#######6  | 74.5M/97.8M [00:10<00:02, 9.81MB/s] 77%|#######7  | 75.4M/97.8M [00:10<00:02, 9.01MB/s] 78%|#######8  | 76.3M/97.8M [00:10<00:02, 8.60MB/s] 79%|#######8  | 77.1M/97.8M [00:10<00:02, 8.07MB/s] 80%|#######9  | 77.9M/97.8M [00:11<00:02, 7.61MB/s] 80%|########  | 78.6M/97.8M [00:11<00:02, 7.58MB/s] 81%|########1 | 79.5M/97.8M [00:11<00:02, 7.81MB/s] 82%|########2 | 80.4M/97.8M [00:11<00:02, 8.42MB/s] 83%|########3 | 81.5M/97.8M [00:11<00:01, 9.25MB/s] 84%|########4 | 82.6M/97.8M [00:11<00:01, 9.77MB/s] 86%|########5 | 83.7M/97.8M [00:11<00:01, 10.3MB/s] 87%|########6 | 84.8M/97.8M [00:11<00:01, 10.6MB/s] 88%|########7 | 85.9M/97.8M [00:11<00:01, 10.9MB/s] 89%|########8 | 87.0M/97.8M [00:11<00:01, 11.1MB/s] 90%|######### | 88.1M/97.8M [00:12<00:00, 11.2MB/s] 91%|#########1| 89.2M/97.8M [00:12<00:00, 11.2MB/s] 92%|#########2| 90.3M/97.8M [00:12<00:00, 11.2MB/s] 93%|#########3| 91.3M/97.8M [00:12<00:00, 11.2MB/s] 95%|#########4| 92.4M/97.8M [00:12<00:00, 10.9MB/s] 96%|#########5| 93.5M/97.8M [00:12<00:00, 11.0MB/s] 97%|#########6| 94.6M/97.8M [00:12<00:00, 11.0MB/s] 98%|#########7| 95.7M/97.8M [00:12<00:00, 11.2MB/s] 99%|#########8| 96.7M/97.8M [00:12<00:00, 11.2MB/s]100%|##########| 97.8M/97.8M [00:12<00:00, 7.89MB/s]
LOSS MKMMD
0
Epoch: [0][  0/500]	Time 8.65 (8.65)	Data 0.0 (0.0)	Loss 1.16 (1.16)	Trans Loss 0.2330 (0.2330)	Cls Acc 0.0 (0.0)
LOSS MKMMD
1
LOSS MKMMD
2
LOSS MKMMD
3
LOSS MKMMD
4
LOSS MKMMD
5
LOSS MKMMD
6
LOSS MKMMD
7
LOSS MKMMD
8
LOSS MKMMD
9
LOSS MKMMD
10
LOSS MKMMD
11
LOSS MKMMD
12
LOSS MKMMD
13
LOSS MKMMD
14
LOSS MKMMD
15
LOSS MKMMD
16
LOSS MKMMD
17
LOSS MKMMD
18
LOSS MKMMD
19
LOSS MKMMD
20
LOSS MKMMD
21
LOSS MKMMD
22
LOSS MKMMD
23
LOSS MKMMD
24
LOSS MKMMD
25
LOSS MKMMD
26
LOSS MKMMD
27
LOSS MKMMD
28
LOSS MKMMD
29
LOSS MKMMD
30
LOSS MKMMD
31
LOSS MKMMD
32
LOSS MKMMD
33
LOSS MKMMD
34
LOSS MKMMD
35
LOSS MKMMD
36
LOSS MKMMD
37
LOSS MKMMD
38
LOSS MKMMD
39
LOSS MKMMD
40
LOSS MKMMD
41
LOSS MKMMD
42
LOSS MKMMD
43
LOSS MKMMD
44
LOSS MKMMD
45
LOSS MKMMD
46
LOSS MKMMD
47
LOSS MKMMD
48
LOSS MKMMD
49
LOSS MKMMD
50
LOSS MKMMD
51
LOSS MKMMD
52
LOSS MKMMD
53
LOSS MKMMD
54
LOSS MKMMD
55
LOSS MKMMD
56
LOSS MKMMD
57
LOSS MKMMD
58
LOSS MKMMD
59
LOSS MKMMD
60
LOSS MKMMD
61
LOSS MKMMD
62
LOSS MKMMD
63
LOSS MKMMD
64
LOSS MKMMD
65
LOSS MKMMD
66
LOSS MKMMD
67
LOSS MKMMD
68
LOSS MKMMD
69
LOSS MKMMD
70
LOSS MKMMD
71
LOSS MKMMD
72
LOSS MKMMD
73
LOSS MKMMD
74
LOSS MKMMD
75
LOSS MKMMD
76
LOSS MKMMD
77
LOSS MKMMD
78
LOSS MKMMD
79
LOSS MKMMD
80
LOSS MKMMD
81
LOSS MKMMD
82
LOSS MKMMD
83
LOSS MKMMD
84
LOSS MKMMD
85
LOSS MKMMD
86
LOSS MKMMD
87
LOSS MKMMD
88
LOSS MKMMD
89
LOSS MKMMD
90
LOSS MKMMD
91
LOSS MKMMD
92
LOSS MKMMD
93
LOSS MKMMD
94
LOSS MKMMD
95
LOSS MKMMD
96
LOSS MKMMD
97
LOSS MKMMD
98
LOSS MKMMD
99
LOSS MKMMD
100
Epoch: [0][100/500]	Time 0.21 (0.29)	Data 0.0 (0.0)	Loss 1.12 (1.09)	Trans Loss 0.3320 (0.2442)	Cls Acc 25.0 (41.1)
LOSS MKMMD
101
LOSS MKMMD
102
LOSS MKMMD
103
LOSS MKMMD
104
LOSS MKMMD
105
LOSS MKMMD
106
LOSS MKMMD
107
LOSS MKMMD
108
LOSS MKMMD
109
LOSS MKMMD
110
LOSS MKMMD
111
LOSS MKMMD
112
LOSS MKMMD
113
LOSS MKMMD
114
LOSS MKMMD
115
LOSS MKMMD
116
LOSS MKMMD
117
LOSS MKMMD
118
LOSS MKMMD
119
LOSS MKMMD
120
LOSS MKMMD
121
LOSS MKMMD
122
LOSS MKMMD
123
LOSS MKMMD
124
LOSS MKMMD
125
LOSS MKMMD
126
LOSS MKMMD
127
LOSS MKMMD
128
LOSS MKMMD
129
Traceback (most recent call last):
  File "custom_dan.py", line 944, in <module>
    main(args)
  File "custom_dan.py", line 652, in main
    lr_scheduler, epoch, args)
  File "custom_dan.py", line 831, in train
    optimizer.step()
  File "/home/bkcs/miniconda3/lib/python3.7/site-packages/torch/optim/lr_scheduler.py", line 68, in wrapper
    return wrapped(*args, **kwargs)
  File "/home/bkcs/miniconda3/lib/python3.7/site-packages/torch/optim/optimizer.py", line 140, in wrapper
    out = func(*args, **kwargs)
  File "/home/bkcs/miniconda3/lib/python3.7/site-packages/torch/optim/optimizer.py", line 23, in _use_grad
    ret = func(self, *args, **kwargs)
  File "/home/bkcs/miniconda3/lib/python3.7/site-packages/torch/optim/sgd.py", line 161, in step
    foreach=group['foreach'])
  File "/home/bkcs/miniconda3/lib/python3.7/site-packages/torch/optim/sgd.py", line 211, in sgd
    maximize=maximize)
  File "/home/bkcs/miniconda3/lib/python3.7/site-packages/torch/optim/sgd.py", line 229, in _single_tensor_sgd
    d_p = d_p.add(param, alpha=weight_decay)
KeyboardInterrupt
