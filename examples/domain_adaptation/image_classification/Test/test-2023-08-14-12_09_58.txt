Namespace(arch='resnet50', batch_size=8, bottleneck_dim=256, byte_size=32, data='Both', epochs=3, iters_per_epoch=1, label=3, log='Test/', loss_function='SCF', lr=0.003, lr_decay=0.75, lr_gamma=0.0003, momentum=0.9, no_pool=False, non_linear=False, per_class_eval=True, phase='test', print_freq=100, random_frequencies=5, scale_parameter=1, scenario='T2S', scratch=False, seed=None, test_statistic='unnorm', trade_off=1.0, wd=0.0005, workers=2)
Concate data
num_classes: 3
=> using model 'resnet50'
Traceback (most recent call last):
  File "custom_dan.py", line 841, in <module>
    main(args)
  File "custom_dan.py", line 501, in main
    classifier.load_state_dict(checkpoint)
  File "/home/bkcs/miniconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImageClassifier:
	size mismatch for head.weight: copying a param with shape torch.Size([5, 256]) from checkpoint, the shape in current model is torch.Size([3, 256]).
	size mismatch for head.bias: copying a param with shape torch.Size([5]) from checkpoint, the shape in current model is torch.Size([3]).
